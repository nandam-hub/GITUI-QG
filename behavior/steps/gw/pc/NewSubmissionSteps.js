const { When, Then } = require('@cucumber/cucumber')
import { NewSubmissionScenario } from '../../../../ui/actions/gw/pc/NewSubmissionScenario'
import { NavigationScenario } from '../../../../ui/actions/gw/pc/NavigationScenario'
import { coverageFilter } from '../../../../ui/util/gw/ActionHelper'
import { t } from 'testcafe'

const newSubmissionScenario = new NewSubmissionScenario()
const navigationScenario = new NavigationScenario()

When(/^the user bind the new submission/, async function () {
    await newSubmissionScenario.bindPolicy()
})

Then(/^the policy is bound successfully/, async function () {
    await newSubmissionScenario.verifyIssue()
    await newSubmissionScenario.viewSubmission()
})

When(/^the user quote the new submission for personal auto/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user quote the new submission for homeowners/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.gWHomeownersLineScreen()
    await navigationScenario.navigateGWHomeownersLineTab('AdditionalCoverges')
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user quote the new submission for small business/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.smallBusinessBusinessType()
    await navigationScenario.navigateSmallBusinessTabSelection('SmallBusinessLineCoverages')
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user issue the new submission for small business/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.smallBusinessBusinessType()
    await navigationScenario.navigateSmallBusinessTabSelection('SmallBusinessLineCoverages')
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user quote the new submission for umbrella liability/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.commercialUmbrellaAccessliability()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

When(/^the user performs return to quote to the new submission/, async function () {
    await newSubmissionScenario.returnToQuote()
})

When(/^the user issue the new submission for umbrella liability/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.commercialUmbrellaAccessliability()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

Then(/^the quote is saved successfully/, async function () {
    await newSubmissionScenario.saveQuote()
})

When(/^the user creates commercial policy/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission from actions menu for commercial property/, async function () {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})


When(/^the user issue the new submission for personal auto with (.*) vehicles/, async function (t, stepArguments) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle(stepArguments[0])
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission from actions menu for personal auto with (.*) vehicles/, async function (t, stepArguments) {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle(stepArguments[0])
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new homeowner policy/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.gWHomeownersLineScreen()
    await navigationScenario.navigateGWHomeownersLineTab('AdditionalCoverges')
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission from actions menu for homeowner policy/, async function () {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.gWHomeownersLineScreen()
    await navigationScenario.navigateGWHomeownersLineTab('AdditionalCoverges')
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user quote the new submission for commercial property/, async function (t) {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
})

Then(/^the policy is issued/, async function () {
    await newSubmissionScenario.verifyIssue()
    await newSubmissionScenario.viewSubmission()
})

Then(/^the policy gets issued and the summary page is displayed/, async function () {
    await newSubmissionScenario.verifyIssue()
    await newSubmissionScenario.viewPolicy()
})

When(/^the user initiate homeowner quote/, async function () {
    await navigationScenario.navigateNewSubmissionScreen()
    await newSubmissionScenario.initiateNewSubmissionPolicy(t.ctx.AccountNumber)
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
})

Then(/^the user validates error messages for Refusal Type dropdown in GWHomeownersLine screen/, async function () {
    await newSubmissionScenario.verifyingRefusalTypeErrorMsg()
})

Then(/^the user validates error messages without selecting any coverage in Homeowners policy/, async function () {
    await newSubmissionScenario.gWHomeownersLineScreen()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyingHomeownersCoverageErrorMsg()
})

When(/^the user issue the new submission for commercial property with (.*) building/, async function (t, stepArguments) {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.addLocation()
    await newSubmissionScenario.addBuilding(stepArguments[0])
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission for commercial property with (.*) location/, async function (t, stepArguments) {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.clickNext()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addCpBlanket()
    await newSubmissionScenario.addLocation(stepArguments[0])
    await navigationScenario.clickNewSubmissionOk()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

When(/^the user issue the new submission for personal auto with (.*) drivers/, async function (t, stepArguments) {
    await navigationScenario.navigateNewSubmissionScreenActionsMenu()
    await newSubmissionScenario.selectProduct()
    await newSubmissionScenario.policyInfo()
    await newSubmissionScenario.addDrivers(stepArguments[0])
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.addDriversInPersonalAutoScreen(stepArguments[0])
    await newSubmissionScenario.usaPersonalAutoStandardCoverages()
    await coverageFilter()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.personalVehicle()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.clickNext()
    await newSubmissionScenario.quote()
    await newSubmissionScenario.verifyQuote()
    await newSubmissionScenario.issuePolicy()
})

Then(/^drivers are added successfully/, async function () {
    await navigationScenario.openPolicy(t.ctx.PolicyNumber)
    await navigationScenario.navigatePolicyFilePersonalAutoScreen()
    await newSubmissionScenario.validatedAddedDrivers()
})


